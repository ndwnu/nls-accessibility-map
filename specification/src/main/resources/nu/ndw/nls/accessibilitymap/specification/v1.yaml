---
openapi: "3.0.0"
info:
  title: "Accessibility map API"
  description: "Query the accessibility for vehicle characteristics within a\
    \ municipality."
  version: "1"
servers:
  - url: "/v1"
  - url: "/api/rest/static-road-data/accessibility-map/v1"

paths:
  /municipalities/{municipalityId}/road-sections:
    get:
      tags:
        - "accessibility-map"
      summary: "Returns inaccessible road sections for a specified municipality per direction"
      operationId: "getInaccessibleRoadSections"
      parameters:
        - $ref: '#/components/parameters/MunicipalityIdPathParam'
        - $ref: '#/components/parameters/VehicleType'
        - $ref: '#/components/parameters/VehicleLengthParam'
        - $ref: '#/components/parameters/VehicleWidthParam'
        - $ref: '#/components/parameters/VehicleHeightParam'
        - $ref: '#/components/parameters/VehicleWeightParam'
        - $ref: '#/components/parameters/VehicleAxleLoadParam'
        - $ref: '#/components/parameters/VehicleHasTrailerParam'
        - $ref: '#/components/parameters/LatitudeParam'
        - $ref: '#/components/parameters/LongitudeParam'

      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessibilityMapResponse"
        "400":
          description: "Validation error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIError"
        "404":
          description: "Resource not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIError"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIError"

  /municipalities:
    get:
      tags:
        - "municipalities"
      summary: "Returns all currently configured municipalities"
      operationId: "getMunicipalities"

      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureCollection"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIError"
components:

  parameters:
    MunicipalityIdPathParam:
      in: "path"
      name: "municipalityId"
      description: "The CBS municipality id"
      required: true
      schema:
        type: "string"
        example: "GM0344"
        pattern: '^(GM)(?=\d{4}$)\d*[1-9]\d*'
    VehicleType:
      in: "query"
      name: "vehicleType"
      description: "The type of vehicle"
      required: true
      schema:
        $ref: "#/components/schemas/VehicleType"
    VehicleLengthParam:
      in: "query"
      name: vehicleLength
      description: The length of the specified vehicle in metres
      required: false
      schema:
        type: number
        format: float
        minimum: 0.0
        maximum: 22.0
    VehicleWidthParam:
      in: "query"
      name: vehicleWidth
      description: The width of the specified vehicle in metres
      required: false
      schema:
        type: number
        format: float
        minimum: 0.0
        maximum: 3.0
    VehicleHeightParam:
      in: "query"
      name: vehicleHeight
      description: The height of the specified vehicle in metres
      required: false
      schema:
        type: number
        format: float
        minimum: 0.0
        maximum: 4.0
    VehicleWeightParam:
      in: "query"
      name: vehicleWeight
      description: "The weight of the specified vehicle in metric tonnes including load and trailer. 
                    This field is required when selecting vehicle type commercial_vehicle."
      required: false
      schema:
        type: number
        format: float
        minimum: 0.0
        maximum: 60
    VehicleAxleLoadParam:
      in: "query"
      name: vehicleAxleLoad
      description: The axle load of the specified vehicle in metric tonnes
      required: false
      schema:
        type: number
        format: float
        minimum: 0.0
        maximum: 12.0
    VehicleHasTrailerParam:
      in: "query"
      name: vehicleHasTrailer
      description: Indication whether a vehicle has a trailer
      required: false
      schema:
        type: boolean
        default: false
    LatitudeParam:
      in: "query"
      name: latitude
      description: Optional latitude of the start location. When present, the longitude must also be specified
      example: 52.1326
      required: false
      schema:
        type: number
        format: double
    LongitudeParam:
      in: "query"
      name: longitude
      description: Optional longitude of the start location. When present, the latitude must also be specified
      example: 5.2913
      required: false
      schema:
        type: number
        format: double

  schemas:
    AccessibilityMapResponse:
      type: "object"
      properties:
        inaccessibleRoadSections:
          type: "array"
          items:
            $ref: "#/components/schemas/RoadSection"
        matchedRoadSection:
          $ref: "#/components/schemas/RoadSection"
    RoadSection:
      type: "object"
      properties:
        roadSectionId:
          type: integer
          format: int32
        forwardAccessible:
          type: boolean
        backwardAccessible:
          type: boolean
    VehicleType:
      type: "string"
      enum:
        - car
        - commercial_vehicle
        - bus
        - motorcycle
        - tractor
    Feature:
      type: object
      description: GeoJSON feature
      required:
        - type
        - id
        - geometry
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.2
      properties:
        type:
          type: string
          enum:
            - Feature
        id:
          type: object
        geometry:
          $ref: '#/components/schemas/Geometry'
        properties:
          $ref: '#/components/schemas/MunicipalityProperties'
    MunicipalityProperties:
      type: object
      required:
        - name
        - searchDistance
        - bounds
        - requestExemptionUrl
      properties:
        name:
          type: string
          description: Municipality name
        searchDistance:
          type: integer
          format: int32
          description: Search distance in metres
        bounds:
          $ref: '#/components/schemas/BoundingBox'
        requestExemptionUrl:
          type: string
          description: Url to request an exemption
    FeatureCollection:
      type: object
      description: GeoJSON feature collection
      required:
        - type
        - features
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.3
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    Geometry:
      type: object
      description: GeoJSON geometry
      discriminator:
        propertyName: type
      required:
        - type
      externalDocs:
        url: https://datatracker.ietf.org/doc/html/rfc7946#section-3.1
      properties:
        type:
          type: string
          enum:
            - Point
          description: Geometry type

    Point2D:
      type: array
      description: Point in 2D space
      externalDocs:
        url: https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.2
      minItems: 2
      maxItems: 2
      example: [ 5.1, 52.2 ]
      items:
        type: number
        format: double

    BoundingBox:
      type: array
      description: The bounding box of a municipality in [west-south, east-north] order
      example: [[3.9555803787437767,51.79111331209157],[4.2393831509799735,51.93614160776871]]
      minItems: 2
      maxItems: 2
      items:
        type: array
        items:
          type: number
          format: double

    Point:
      type: object
      description: GeoJSON geometry
      example: [ 5.1, 52.2 ]
      externalDocs:
        url: https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.2
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              $ref: '#/components/schemas/Point2D'

    APIError:
      type: "object"
      properties:
        message:
          type: "string"
