<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.6</version>
  </parent>
  <groupId>nu.ndw.nls.accessibilitymap</groupId>
  <artifactId>parent</artifactId>
  <version>5.1.22-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>nls-accessibility-map</name>
  <description>REST API to determine accessible road sections for a given vehicle type</description>
  <url>https://github.com/ndwnu/nls-accessibility-map</url>
  <scm>
    <url>https://github.com/ndwnu/nls-accessibility-map</url>
  </scm>

  <modules>
    <module>specification</module>
    <module>accessibility</module>
    <module>trafficsignclient</module>
    <module>jobs</module>
    <module>backend</module>
    <module>acceptance-test</module>
  </modules>
  <properties>
    <java.version>21</java.version>
    <exec-maven-plugin.version>3.5.1</exec-maven-plugin.version>
    <nls-springboot.logging.version>8.4.11</nls-springboot.logging.version>
    <nls-springboot.component-test.version>12.0.0</nls-springboot.component-test.version>
    <nls-springboot.monitoring.version>8.4.15</nls-springboot.monitoring.version>
    <nls-springboot.test.version>9.0.1</nls-springboot.test.version>
    <nls-springboot.gatling-test.version>1.1.0</nls-springboot.gatling-test.version>
    <gatling.version>3.14.5</gatling.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <jackson-databind-nullable.version>0.2.7</jackson-databind-nullable.version>
    <jacoco-maven-plugin.version>0.8.13</jacoco-maven-plugin.version>
    <karate.version>1.4.1</karate.version>
    <keycloak-authz-client.version>26.0.6</keycloak-authz-client.version>
    <mapstruct.version>1.6.3</mapstruct.version>
    <openapi-generator-maven-plugin.version>7.16.0</openapi-generator-maven-plugin.version>
    <picocli.version>4.7.7</picocli.version>
    <springdoc.version>2.8.13</springdoc.version>
    <stream-utils.version>1.3.1</stream-utils.version>
    <swagger-annotations.version>2.2.37</swagger-annotations.version>
    <nls-events.version>5.2.5</nls-events.version>
    <nls-nwb-data-access.version>9.3.5</nls-nwb-data-access.version>
    <nls-springboot.version>9.3.9</nls-springboot.version>
    <nls-routing-map-matcher.version>19.0.0</nls-routing-map-matcher.version>
    <nls-geometry.version>5.0.15</nls-geometry.version>
    <nls-geojson-geometry.version>1.4.36</nls-geojson-geometry.version>
    <nls-springboot.test.graph.version>1.0.8</nls-springboot.test.graph.version>
    <jackson-geojson.version>1.14</jackson-geojson.version>
    <jsurfer-jackson.version>1.6.5</jsurfer-jackson.version>
    <json-unit.version>4.1.1</json-unit.version>
    <cucumber.version>7.29.0</cucumber.version>
    <location-data-issues.version>2.2.59</location-data-issues.version>
    <unirest-java.version>1.4.9</unirest-java.version>
    <resilience4j-bom.version>2.3.0</resilience4j-bom.version>
    <yaml-combine-maven-plugin.version>2.0.8</yaml-combine-maven-plugin.version>
    <wiremock-spring-boot.version>3.10.6</wiremock-spring-boot.version>
    <!-- Overrides for transitive dependencies to fix vulnerabilities -->
    <!-- Vulnerability fix: https://avd.aquasec.com/nvd/cve-2025-24970 -->
    <netty.version>4.2.4.Final</netty.version>
    <!-- Vulnerability fix: https://avd.aquasec.com/nvd/cve-2024-57699 -->
    <json-smart.version>2.6.0</json-smart.version>
    <!-- Vulnerability fix: https://avd.aquasec.com/nvd/cve-2025-48976 -->
    <commons-fileupload.version>1.6.0</commons-fileupload.version>
  </properties>
  <distributionManagement>
    <repository>
      <id>NLS</id>
      <url>https://pkgs.dev.azure.com/ndwnu/NLS/_packaging/NLS/maven/v1</url>
    </repository>
  </distributionManagement>
  <repositories>
    <repository>
      <id>NLS</id>
      <url>https://pkgs.dev.azure.com/ndwnu/NLS/_packaging/NLS/maven/v1</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>ndw-shared</id>
      <url>https://pkgs.dev.azure.com/ndwnu/_packaging/ndw-shared/maven/v1</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>osgeo</id>
      <name>OSGeo Release Repository</name>
      <url>https://repo.osgeo.org/repository/release/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>NLS</id>
      <url>https://pkgs.dev.azure.com/ndwnu/NLS/_packaging/NLS/maven/v1</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>nu.ndw.nls.springboot.test.graph</groupId>
        <artifactId>graph-hopper-exporter</artifactId>
        <version>${nls-springboot.test.graph.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.springboot.test.graph</groupId>
        <artifactId>database-nwb-exporter</artifactId>
        <version>${nls-springboot.test.graph.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.resilience4j</groupId>
        <artifactId>resilience4j-bom</artifactId>
        <version>${resilience4j-bom.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.locationdataissuesapi</groupId>
        <artifactId>client-feign</artifactId>
        <version>${location-data-issues.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>com.intuit.karate</groupId>
        <artifactId>karate-junit5</artifactId>
        <version>${karate.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.keycloak</groupId>
        <artifactId>keycloak-authz-client</artifactId>
        <version>${keycloak-authz-client.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>
      <dependency>
        <groupId>com.mashape.unirest</groupId>
        <artifactId>unirest-java</artifactId>
        <version>${unirest-java.version}</version>
      </dependency>
      <dependency>
        <groupId>org.openapitools</groupId>
        <artifactId>jackson-databind-nullable</artifactId>
        <version>${jackson-databind-nullable.version}</version>
      </dependency>
      <dependency>
        <groupId>info.picocli</groupId>
        <artifactId>picocli-spring-boot-starter</artifactId>
        <version>${picocli.version}</version>
      </dependency>
      <dependency>
        <groupId>com.conductor</groupId>
        <artifactId>stream-utils</artifactId>
        <version>${stream-utils.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>${commons-fileupload.version}</version>
      </dependency>

      <dependency>
        <groupId>nu.ndw.nls.geojson.geometry</groupId>
        <artifactId>geometry-jts</artifactId>
        <version>${nls-geojson-geometry.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.geojson.geometry</groupId>
        <artifactId>specification</artifactId>
        <version>${nls-geojson-geometry.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.geojson.geometry</groupId>
        <artifactId>geometry-model</artifactId>
        <version>${nls-geojson-geometry.version}</version>
      </dependency>

      <dependency>
        <groupId>nu.ndw</groupId>
        <artifactId>nls-events</artifactId>
        <version>${nls-events.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw</groupId>
        <artifactId>nls-nwb-data-access-jooq</artifactId>
        <version>${nls-nwb-data-access.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.geometry</groupId>
        <artifactId>nls-geometry</artifactId>
        <version>${nls-geometry.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.springboot</groupId>
        <artifactId>core</artifactId>
        <version>${nls-springboot.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.springboot</groupId>
        <artifactId>client-feign</artifactId>
        <version>${nls-springboot.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.springboot</groupId>
        <artifactId>logging</artifactId>
        <version>${nls-springboot.logging.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.springboot</groupId>
        <artifactId>monitoring</artifactId>
        <version>${nls-springboot.monitoring.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.springboot</groupId>
        <artifactId>messaging</artifactId>
        <version>${nls-springboot.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.springboot</groupId>
        <artifactId>security</artifactId>
        <version>${nls-springboot.version}</version>
      </dependency>
      <dependency>
        <groupId>net.minidev</groupId>
        <artifactId>json-smart</artifactId>
        <version>${json-smart.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.springboot</groupId>
        <artifactId>test</artifactId>
        <version>${nls-springboot.test.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.springboot</groupId>
        <artifactId>component-test</artifactId>
        <version>${nls-springboot.component-test.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.springboot</groupId>
        <artifactId>gatling-test</artifactId>
        <version>${nls-springboot.gatling-test.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls.springboot</groupId>
        <artifactId>oauth2-client-credentials</artifactId>
        <version>${nls-springboot.version}</version>
      </dependency>
      <dependency>
        <groupId>nu.ndw.nls</groupId>
        <artifactId>routing-map-matcher-library</artifactId>
        <version>${nls-routing-map-matcher.version}</version>
      </dependency>
      <dependency>
        <groupId>de.grundid.opendatalab</groupId>
        <artifactId>geojson-jackson</artifactId>
        <version>${jackson-geojson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.jsurfer</groupId>
        <artifactId>jsurfer-jackson</artifactId>
        <version>${jsurfer-jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>net.javacrumbs.json-unit</groupId>
        <artifactId>json-unit-assertj</artifactId>
        <version>${json-unit.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Dependencies for BDD testing -->
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-spring</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-java</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-junit</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>io.gatling.highcharts</groupId>
        <artifactId>gatling-charts-highcharts</artifactId>
        <version>${gatling.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.wiremock.integrations</groupId>
        <artifactId>wiremock-spring-boot</artifactId>
        <version>${wiremock-spring-boot.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
              <exclude>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
              </exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>build-info</goal>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>prepare-agent-integration</id>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
            </execution>
            <execution>
              <id>report-integration</id>
              <goals>
                <goal>report-integration</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <annotationProcessorPaths>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </path>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
              </path>
            </annotationProcessorPaths>
            <release>${java.version}</release>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.openapitools</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>${openapi-generator-maven-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>nu.ndw.nls.springboot</groupId>
              <artifactId>openapi</artifactId>
              <version>${nls-springboot.version}</version>
            </dependency>
            <dependency>
              <groupId>nu.ndw.nls.accessibilitymap</groupId>
              <artifactId>specification</artifactId>
              <version>${project.parent.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>generate-open-api</id>
              <goals>
                <goal>generate</goal>
              </goals>
              <configuration>
                <templateResourcePath>nu/ndw/nls/springboot/openapi</templateResourcePath>
                <configurationFile>open-api-config.yaml</configurationFile>
                <additionalProperties>removeEnumValuePrefix=true</additionalProperties>
                <!-- Location of our openapi specification file -->
                <inputSpec>/nu/ndw/nls/accessibilitymap/specification/v1.yaml</inputSpec>
                <!-- Type of code to generate -->
                <generatorName>spring</generatorName>
                <!-- Add model prefix to distinguish between jooq- and json-models -->
                <modelNameSuffix>Json</modelNameSuffix>
                <!--
                  Prevent generating too much by only specifying one file.
                  The ApiUtil is fairly harmless and is actually used in the delegate pattern.
                  Reason to not want all the default generated files: we'd need more dependencies.
                -->
                <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>unpack-open-api-geojson-geometry-config</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>nu.ndw.nls.geojson.geometry</groupId>
                  <artifactId>specification-open-api-config</artifactId>
                  <version>${nls-geojson-geometry.version}</version>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <includes>
                    **/*.yaml
                  </includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.randomnoun.maven.plugins</groupId>
        <artifactId>yaml-combine-maven-plugin</artifactId>
        <version>${yaml-combine-maven-plugin.version}</version>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>yaml-combine</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>yaml-combine</goal>
            </goals>
            <configuration>
              <fileset>
                <includes>
                  <!-- can supply multiple files here or filespecs; e.g. *.yaml -->
                  <include>target/nu/ndw/nls/geojson/geometry/openapi/config/openapi-geojson-config.yaml</include>
                  <include>openapi-variables.yaml</include>
                </includes>
                <directory>${project.basedir}</directory>
              </fileset>
              <outputDirectory>${project.basedir}</outputDirectory>
              <!-- use this file as the input to the codegen goal -->
              <finalName>open-api-config.yaml</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
