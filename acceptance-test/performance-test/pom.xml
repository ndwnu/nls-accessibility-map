<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>nu.ndw.nls.accessibilitymap</groupId>
    <artifactId>acceptance-test</artifactId>
    <version>5.1.16-SNAPSHOT</version>
  </parent>
  <artifactId>performance-test</artifactId>
  <name>NLS Accessibility Map - Performance test</name>

  <properties>
    <maven.test.skip>true</maven.test.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>nu.ndw.nls.accessibilitymap</groupId>
      <artifactId>acceptance-test-shared</artifactId>
      <version>${project.parent.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>nu.ndw.nls.springboot</groupId>
      <artifactId>gatling-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <profiles>

    <profile>
      <id>performance-test</id>
      <properties>
        <maven.test.skip>false</maven.test.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skipTests>false</skipTests>
              <!-- Workaround required to run private Gatling code from our own Java code -->
              <argLine>
                --add-opens=java.base/java.lang=ALL-UNNAMED
                --add-opens=java.base/java.util=ALL-UNNAMED
              </argLine>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>docker-compose-down</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <arguments combine.children="append">
                    <argument>down</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>docker-compose-up-infra</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <arguments combine.children="append">
                    <argument>up</argument>
                    <argument>--build</argument>
                    <argument>-d</argument>
                    <argument>nls-postgres</argument>
                    <argument>nls-keycloak</argument>
                    <argument>accessibility-wiremock-stub</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>init-performance-test</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>bash</executable>
                  <commandlineArgs>../../scripts/prepare-files-component-test.sh ../../</commandlineArgs>
                </configuration>
              </execution>
              <!-- Make sure that this folder is read write by all for the build pipeline to allow docker
                   user 1000 to write on the volume mount. -->
              <execution>
                <id>chmod-777-maps</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <arguments>
                    <argument>-R</argument>
                    <argument>777</argument>
                    <argument>../../.tmp/graphhopper</argument>
                    <argument>../../.tmp/trafficsigns</argument>
                  </arguments>
                  <executable>chmod</executable>
                </configuration>
              </execution>

              <execution>
                <id>wait-for-database</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>bash</executable>
                  <commandlineArgs>../../scripts/pg-isready.sh</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-compose-up-nls-accessibility-map-api</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <arguments combine.children="append">
                    <argument>up</argument>
                    <argument>-d</argument>
                    <argument>--build</argument>
                    <argument>nls-accessibility-map-api-component-test</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>docker-compose-down-after-tests</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <arguments combine.children="append">
                    <argument>down</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <arguments>
                <argument>compose</argument>
              </arguments>
              <executable>docker</executable>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
