openapi: 3.0.0
info:
  title: Accessibility map V1 API
  description: >
    Query the accessibility for vehicle characteristics within a municipality. More information available on 
    https://docs.ndw.nu
  version: '1'
servers:
  - url: /api/rest/static-road-data/accessibility-map/v1

paths:
  /municipalities/{municipalityId}/road-sections:
    get:
      tags:
        - accessibility-map
      summary: Returns inaccessible road sections for a specified municipality as JSON
      operationId: getInaccessibleRoadSections
      parameters:
        - $ref: '#/components/parameters/MunicipalityIdPathParam'
        - $ref: '#/components/parameters/VehicleTypeParam'
        - $ref: '#/components/parameters/VehicleLengthParam'
        - $ref: '#/components/parameters/VehicleWidthParam'
        - $ref: '#/components/parameters/VehicleHeightParam'
        - $ref: '#/components/parameters/VehicleWeightParam'
        - $ref: '#/components/parameters/VehicleAxleLoadParam'
        - $ref: '#/components/parameters/VehicleHasTrailerParam'
        - $ref: '#/components/parameters/LatitudeParam'
        - $ref: '#/components/parameters/LongitudeParam'
        - $ref: '#/components/parameters/EmissionClassParam'
        - $ref: '#/components/parameters/FuelTypeParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessibilityMapResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /municipalities/{municipalityId}/road-sections.geojson:
    get:
      tags:
        - accessibility-map
      summary: Returns road sections for a specified municipality as GeoJSON per direction
      operationId: getRoadSections
      parameters:
        - $ref: '#/components/parameters/MunicipalityIdPathParam'
        - $ref: '#/components/parameters/VehicleTypeParam'
        - $ref: '#/components/parameters/VehicleLengthParam'
        - $ref: '#/components/parameters/VehicleWidthParam'
        - $ref: '#/components/parameters/VehicleHeightParam'
        - $ref: '#/components/parameters/VehicleWeightParam'
        - $ref: '#/components/parameters/VehicleAxleLoadParam'
        - $ref: '#/components/parameters/VehicleHasTrailerParam'
        - $ref: '#/components/parameters/AccessibleParam'
        - $ref: '#/components/parameters/LatitudeParam'
        - $ref: '#/components/parameters/LongitudeParam'
        - $ref: '#/components/parameters/EmissionClassParam'
        - $ref: '#/components/parameters/FuelTypeParam'
      responses:
        '200':
          description: OK
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/RoadSectionFeatureCollection'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /municipalities:
    get:
      tags:
        - municipalities
      summary: Returns all currently configured municipalities
      operationId: getMunicipalities
      responses:
        '200':
          description: OK
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/MunicipalityFeatureCollection'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /road-operators:
    get:
      tags:
        - roadOperators
      summary: Returns all currently configured road operators
      operationId: getRoadOperators
      responses:
        '200':
          description: OK
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/RoadOperators'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

components:
  parameters:
    MunicipalityIdPathParam:
      in: path
      name: municipalityId
      description: The CBS municipality ID
      required: true
      schema:
        type: string
        example: GM0344
        pattern: ^(GM)(?=\d{4}$)\d*[1-9]\d*
    VehicleTypeParam:
      in: query
      name: vehicleType
      description: The type of vehicle
      required: true
      schema:
        $ref: '#/components/schemas/VehicleType'
    VehicleLengthParam:
      in: query
      name: vehicleLength
      description: The length of the specified vehicle in metres
      required: false
      schema:
        type: number
        format: float
        example: 5.2
        minimum: 0.0
        maximum: 22.0
    VehicleWidthParam:
      in: query
      name: vehicleWidth
      description: The width of the specified vehicle in metres
      required: false
      schema:
        type: number
        format: float
        example: 2.0
        minimum: 0.0
        maximum: 3.0
    VehicleHeightParam:
      in: query
      name: vehicleHeight
      description: The height of the specified vehicle in metres
      required: false
      schema:
        type: number
        format: float
        example: 3.2
        minimum: 0.0
        maximum: 4.0
    VehicleWeightParam:
      in: query
      name: vehicleWeight
      description: |
        The weight of the specified vehicle in metric tonnes including load and trailer.
      required: false
      schema:
        type: number
        format: float
        example: 20.0
        minimum: 0.0
        maximum: 60.0
    VehicleAxleLoadParam:
      in: query
      name: vehicleAxleLoad
      description: The axle load of the specified vehicle in metric tonnes
      required: false
      schema:
        type: number
        format: float
        example: 4.0
        minimum: 0.0
        maximum: 12.0
    VehicleHasTrailerParam:
      in: query
      name: vehicleHasTrailer
      description: Indication whether a vehicle has a trailer
      required: false
      schema:
        type: boolean
        example: false
        default: false
    AccessibleParam:
      in: query
      name: accessible
      description: |
        Only return accessible or inaccessible road sections. When omitted, return both.
        Matched road section by latitude-longitude is always returned, regardless of this filter.
      required: false
      schema:
        type: boolean
        example: false
    LatitudeParam:
      in: query
      name: latitude
      description: Optional latitude of the destination location. When present, the longitude must also be specified
      required: false
      schema:
        type: number
        format: double
        example: 52.1326
    LongitudeParam:
      in: query
      name: longitude
      description: Optional longitude of the destination location. When present, the latitude must also be specified
      required: false
      schema:
        type: number
        format: double
        example: 5.2913
    EmissionClassParam:
      in: query
      name: emissionClass
      example: euro_6
      description: Vehicle's Euro emissions standard
      required: false
      schema:
        $ref: '#/components/schemas/EmissionClass'
    FuelTypeParam:
      in: query
      description: The vehicle's fuel type
      example: petrol
      name: fuelType
      required: false
      schema:
        $ref: '#/components/schemas/FuelType'

  schemas:
    FuelType:
      type: string
      example: petrol
      description: The vehicle's fuel type
      enum:
        - electric
        - diesel
        - hydrogen
        - liquefied_petroleum_gas
        - compressed_natural_gas
        - liquefied_natural_gas
        - ethanol
        - petrol

    EmissionClass:
      type: string
      example: euro_6
      description: Vehicle's Euro emissions standard
      enum:
        - zero
        - euro_1
        - euro_2
        - euro_3
        - euro_4
        - euro_5
        - euro_6

    RoadOperators:
      type: "array"
      description: A collection of road operators
      minItems: 0
      items:
        $ref: "#/components/schemas/RoadOperator"
      readOnly: true
    RoadOperator:
      type: object
      description: A road operator is someone who is responsible for the maintenance of road sections.
      required:
        - roadOperatorName
        - roadOperatorType
        - roadOperatorCode
      properties:
        roadOperatorName:
          type: string
          example: Beverwijk
          description: The name of the road operator.
          readOnly: true
        roadOperatorCode:
          type: string
          example: 375
          description: The code of the road operator.
          readOnly: true
        roadOperatorType:
          type: string
          example: WaterAuthority
          description: The road operator type.
          enum:
            - WaterAuthority
            - Municipality
            - Province
            - State
            - Other
          readOnly: true
        municipalityId:
          type: string
          example: GM375
          description: The municipality id of the road operator. This is only applicable of road operators of type Municipality.
          readOnly: true
        requestExemptionUrl:
          type: string
          description: URL to request an exemption.
          example: "https://loket.digitaal.utrecht.nl/nl/products/ontheffing-voertuig"
          readOnly: true
    VehicleType:
      type: string
      description: Vehicle type
      enum:
        - bus
        - car
        - light_commercial_vehicle
        - motorcycle
        - tractor
        - truck
      example: truck

    AccessibilityMapResponse:
      type: object
      description: Response object containing (in)accessible road sections
      properties:
        inaccessibleRoadSections:
          type: array
          items:
            $ref: '#/components/schemas/RoadSection'
          description: List of inaccessible road sections
        matchedRoadSection:
          $ref: '#/components/schemas/MatchedRoadSection'

      example:
        - roadSectionId: 312865
          forwardAccessible: false
          backwardAccessible: false
        - roadSectionId: 312866
          forwardAccessible: false
        - roadSectionId: 581209
          forwardAccessible: true
          backwardAccessible: false
    RoadSection:
      type: object
      description: Road section
      properties:
        roadSectionId:
          type: integer
          format: int32
          description: Identifier of the road section used by NWB
          example: 385127
        forwardAccessible:
          type: boolean
          description: Indicates whether the road section is accessible in forward direction
          example: false
        backwardAccessible:
          type: boolean
          description: Indicates whether the road section is accessible in backward direction
          example: false
      example:
        roadSectionId: 581209
        forwardAccessible: true
        backwardAccessible: false

    MatchedRoadSection:
      allOf:
        - $ref: "#/components/schemas/RoadSection"
        - type: object
      properties:
        reasons:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/Reason'

    Reason:
      type: object
      description: Reason why the road section is inaccessible
      required:
        - type
        - unitSymbol
        - condition
      properties:
        trafficSignId:
          $ref: '#/components/schemas/TrafficSignId'
        trafficSignType:
          $ref: '#/components/schemas/TrafficSignType'
        restrictions:
          type: array
          items:
            $ref: "#/components/schemas/Restriction"

    Restriction:
      type: object
      description: Restriction on a particular route making it inaccessible
      required:
        - reasonType
        - unitSymbol
        - condition
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          enum:
            - VehicleLengthRestriction
            - VehicleHeightRestriction
            - VehicleWidthRestriction
            - VehicleAxleWeightRestriction
            - VehicleWeightRestriction
            - FuelTypeRestriction
            - VehicleTypeRestriction
          description: "The restriction type."
        unitSymbol:
          $ref: '#/components/schemas/RestrictionUnitSymbol'
        condition:
          $ref: '#/components/schemas/RestrictionCondition'

    RestrictionUnitSymbol:
      enum:
        - "tons"
        - "metre"
        - "enum"
        - "unknown"
      type: "string"
      example: "metre"
      default: "unknown"
      description: "The unit symbol is the symbol used to represent a value."

    RestrictionCondition:
      enum:
        - "equals"
        - "greater_than_or_equals"
        - "unknown"
      type: "string"
      default: "unknown"
      example: "greater_than_or_equals"
      description: "The reason condition"

    VehicleLengthRestriction:
      type: object
      required:
        - value
      allOf:
        - $ref: "#/components/schemas/Restriction"
        - properties:
            value:
              type: number

    VehicleAxleWeightRestriction:
      type: object
      required:
        - value
      allOf:
        - $ref: "#/components/schemas/Restriction"
        - properties:
            value:
              type: number

    VehicleWeightRestriction:
      type: object
      required:
        - value
      allOf:
        - $ref: "#/components/schemas/Restriction"
        - properties:
            value:
              type: number

    VehicleWidthRestriction:
      type: object
      required:
        - value
      allOf:
        - $ref: "#/components/schemas/Restriction"
        - properties:
            value:
              type: number

    VehicleHeightRestriction:
      type: object
      required:
        - value
      allOf:
        - $ref: "#/components/schemas/Restriction"
        - properties:
            value:
              type: number

    FuelTypeRestriction:
      type: object
      required:
        - values
      allOf:
        - $ref: "#/components/schemas/Restriction"
        - properties:
            values:
              type: array
              items:
                $ref: '#/components/schemas/FuelType'
      example:
        - type: "FuelTypeRestriction"
          unitSymbol: "enum"
          condition: "equals"
          values:
            - petrol
            - electric

    VehicleTypeRestriction:
      type: object
      required:
        - values
      allOf:
        - $ref: "#/components/schemas/Restriction"
        - properties:
            values:
              type: array
              items:
                $ref: '#/components/schemas/VehicleType'
      example:
        - type: "VehicleTypeRestriction"
          unitSymbol: "enum"
          condition: "equals"
          values:
            - car
            - light_commercial_vehicle
            -
    TrafficSignId:
      type: "string"
      format: "uuid"
      example: "79a56dfa-7a59-4bcc-aee5-918fe7064474"
    TrafficSignType:
      enum:
        - "C1"
        - "C6"
        - "C7"
        - "C7a"
        - "C7b"
        - "C8"
        - "C9"
        - "C10"
        - "C11"
        - "C12"
        - "C17"
        - "C18"
        - "C19"
        - "C20"
        - "C21"
        - "C22"
        - "C22a"
        - "C22c"
        - "unknown"
      type: "string"
      default: "unknown"
      example: "c1"
      description: "Traffic sign type"
    FeatureCollection:
      type: object
      description: GeoJSON feature collection
      required:
        - type
        - features
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.3
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
          description: Type of the element
          example: FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    Feature:
      type: object
      description: GeoJSON feature
      required:
        - type
        - id
        - geometry
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.2
      properties:
        type:
          type: string
          enum:
            - Feature
          example: Feature
        id:
          type: object
          description: Identifier for the feature
          example: 217934
        geometry:
          $ref: './geojson-geometry.yaml#/components/schemas/Geometry'
    RoadSectionFeatureCollection:
      allOf:
        - $ref: '#/components/schemas/FeatureCollection'
        - type: object
          description: Road sections GeoJSON feature collection
          required:
            - features
          properties:
            features:
              type: array
              items:
                $ref: '#/components/schemas/RoadSectionFeature'
    RoadSectionFeature:
      allOf:
        - $ref: '#/components/schemas/Feature'
        - type: object
          description: Road section GeoJSON feature
          required:
            - geometry
          properties:
            id:
              type: integer
              format: int32
              example: 715923
            geometry:
              $ref: './geojson-geometry.yaml#/components/schemas/LineString'
            properties:
              $ref: '#/components/schemas/RoadSectionProperties'
    RoadSectionProperties:
      type: object
      description: Road section GeoJSON properties
      required:
        - accessible
      properties:
        accessible:
          type: boolean
          description: Indicates whether the road section is accessible
          example: false
        matched:
          type: boolean
          description: Indicates whether the road section is matched as the destination
          example: true

    MunicipalityFeatureCollection:
      allOf:
        - $ref: '#/components/schemas/FeatureCollection'
        - type: object
          description: Municipalities GeoJSON feature collection
          required:
            - features
          properties:
            features:
              type: array
              items:
                $ref: '#/components/schemas/MunicipalityFeature'
    MunicipalityFeature:
      allOf:
        - $ref: '#/components/schemas/Feature'
        - type: object
          description: Municipality GeoJSON feature
          required:
            - geometry
          properties:
            id:
              type: string
              description: Identifier of the municipality in the municipality registry
              example: GM0344
            geometry:
              $ref: './geojson-geometry.yaml#/components/schemas/Point'
            properties:
              $ref: '#/components/schemas/MunicipalityProperties'
    MunicipalityProperties:
      type: object
      description: Municipality GeoJSON properties
      required:
        - name
        - searchDistance
        - bounds
        - dateLastCheck
      properties:
        name:
          type: string
          description: Municipality name
          example: Utrecht
        searchDistance:
          type: integer
          format: int32
          description: Search distance in metres
          example: 50000
        bounds:
          $ref: '#/components/schemas/BoundingBox'
        dateLastCheck:
          type: string
          format: date
          description: The last validated date.
          example: 2024-10-01

    BoundingBox:
      type: array
      description: The bounding box of a municipality in [west-south, east-north] order
      example: [ [ 3.9555803787437767, 51.79111331209157 ], [ 4.2393831509799735, 51.93614160776871 ] ]
      minItems: 2
      maxItems: 2
      items:
        type: array
        items:
          type: number
          format: double

    APIError:
      type: object
      description: API error response
      properties:
        message:
          type: string
          description: Error message from the API
          example: 'Could not find road section by latitude: 52.1326 longitude: 5.2913'
